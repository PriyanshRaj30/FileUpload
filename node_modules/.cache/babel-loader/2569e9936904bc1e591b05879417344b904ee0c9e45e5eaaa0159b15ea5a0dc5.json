{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshraj/Desktop/FileUpload/src/components/files-upload-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]); // New state for displaying uploaded files\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setFiles(event.target.files);\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    const formData = new FormData();\n\n    // Append each selected file to the FormData object\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n\n    // Add userId to the form data (you can change this to dynamic values)\n    formData.append('userId', 'someUserId'); // Replace with dynamic user ID if needed\n\n    setIsUploading(true); // Set uploading state\n\n    try {\n      // Send POST request with form data to the backend\n      const response = await axios.post('http://localhost:5001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle success (e.g., display a success message or clear the form)\n      console.log('Files uploaded successfully:', response.data);\n      alert('Files uploaded successfully');\n\n      // Update the uploadedFiles state with the response data (assuming the backend returns file URLs or names)\n      setUploadedFiles(response.data.files); // Adjust based on the actual response from your server\n    } catch (error) {\n      // Handle error\n      console.error('Error uploading files:', error);\n      alert('Error uploading files');\n    } finally {\n      setIsUploading(false); // Reset uploading state\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      children: isUploading ? 'Uploading...' : 'Upload Files'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.from(files).map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this) // Display file name or link\n          : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Uploaded file \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this) // Adjust based on response\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"4oYy2OKlTI6GtG5ES1pead+9x5M=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","files","setFiles","uploadedFiles","setUploadedFiles","isUploading","setIsUploading","handleFileChange","event","target","handleUpload","formData","FormData","i","length","append","response","post","headers","console","log","data","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","onClick","disabled","Array","from","map","file","index","name","_c","$RefreshReg$"],"sources":["/Users/priyanshraj/Desktop/FileUpload/src/components/files-upload-component.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction FileUpload() {\n  const [files, setFiles] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);  // New state for displaying uploaded files\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    setFiles(event.target.files);\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    const formData = new FormData();\n\n    // Append each selected file to the FormData object\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n\n    // Add userId to the form data (you can change this to dynamic values)\n    formData.append('userId', 'someUserId'); // Replace with dynamic user ID if needed\n\n    setIsUploading(true);  // Set uploading state\n\n    try {\n      // Send POST request with form data to the backend\n      const response = await axios.post('http://localhost:5001/api/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      // Handle success (e.g., display a success message or clear the form)\n      console.log('Files uploaded successfully:', response.data);\n      alert('Files uploaded successfully');\n      \n      // Update the uploadedFiles state with the response data (assuming the backend returns file URLs or names)\n      setUploadedFiles(response.data.files);  // Adjust based on the actual response from your server\n    } catch (error) {\n      // Handle error\n      console.error('Error uploading files:', error);\n      alert('Error uploading files');\n    } finally {\n      setIsUploading(false);  // Reset uploading state\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Files</h2>\n\n      {/* File input field */}\n      <input type=\"file\" multiple onChange={handleFileChange} />\n\n      {/* Button to trigger file upload */}\n      <button onClick={handleUpload} disabled={isUploading}>\n        {isUploading ? 'Uploading...' : 'Upload Files'}\n      </button>\n\n      {/* Display selected files */}\n      <div>\n        <h3>Selected Files:</h3>\n        <ul>\n          {Array.from(files).map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Display uploaded files */}\n      {uploadedFiles.length > 0 && (\n        <div>\n          <h3>Uploaded Files:</h3>\n          <ul>\n            {uploadedFiles.map((file, index) => (\n              <li key={index}>\n                {file.name ? (\n                  <span>{file.name}</span>  // Display file name or link\n                ) : (\n                  <span>Uploaded file {index + 1}</span> // Adjust based on response\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}